"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntAttributeValue = void 0;
const typeorm_1 = require("typeorm");
const medusa_1 = require("@medusajs/medusa");
const medusa_2 = require("@medusajs/medusa");
const attribute_1 = require("./attribute");
const product_1 = require("./product");
let IntAttributeValue = class IntAttributeValue extends medusa_2.BaseEntity {
    beforeInsert() {
        this.id = (0, medusa_1.generateEntityId)(this.id, "int_attr_val");
    }
};
__decorate([
    (0, typeorm_1.Column)({ type: "int" }),
    __metadata("design:type", Number)
], IntAttributeValue.prototype, "value", void 0);
__decorate([
    (0, typeorm_1.ManyToMany)(() => product_1.Product),
    (0, typeorm_1.JoinTable)(),
    __metadata("design:type", Array)
], IntAttributeValue.prototype, "products", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => attribute_1.Attribute, (a) => a.int_values),
    __metadata("design:type", attribute_1.Attribute)
], IntAttributeValue.prototype, "attribute", void 0);
__decorate([
    (0, typeorm_1.BeforeInsert)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], IntAttributeValue.prototype, "beforeInsert", null);
IntAttributeValue = __decorate([
    (0, typeorm_1.Entity)()
], IntAttributeValue);
exports.IntAttributeValue = IntAttributeValue;
