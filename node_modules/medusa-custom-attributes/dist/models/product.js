"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Product = void 0;
const typeorm_1 = require("typeorm");
const medusa_1 = require("@medusajs/medusa");
const attribute_value_1 = require("./attribute-value");
const int_attribute_value_1 = require("./int-attribute-value");
let Product = class Product extends medusa_1.Product {
};
__decorate([
    (0, typeorm_1.ManyToMany)(() => attribute_value_1.AttributeValue),
    (0, typeorm_1.JoinTable)(),
    __metadata("design:type", Array)
], Product.prototype, "attribute_values", void 0);
__decorate([
    (0, typeorm_1.ManyToMany)(() => int_attribute_value_1.IntAttributeValue, {
        cascade: true,
        onDelete: "CASCADE",
    }),
    (0, typeorm_1.JoinTable)({ name: "int_attribute_values_products_product" }),
    __metadata("design:type", Array)
], Product.prototype, "int_attribute_values", void 0);
Product = __decorate([
    (0, typeorm_1.Entity)()
], Product);
exports.Product = Product;
