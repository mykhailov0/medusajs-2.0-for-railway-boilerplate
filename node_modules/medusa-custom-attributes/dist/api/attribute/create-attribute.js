"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminPostAttributeReq = exports.AttributeValueReq = void 0;
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const attribute_1 = require("../../models/attribute");
const utils_1 = require("@medusajs/medusa/dist/utils");
exports.default = async (req, res) => {
    try {
        const validated = await (0, utils_1.validator)(AdminPostAttributeReq, req.body);
        const attributeService = req.scope.resolve("attributeService");
        res.json({ attribute: await attributeService.create(validated) });
    }
    catch (error) {
        res.status(500).json(error.message);
    }
};
class AttributeValueReq {
}
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], AttributeValueReq.prototype, "id", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], AttributeValueReq.prototype, "value", void 0);
__decorate([
    (0, class_validator_1.IsNumber)(),
    (0, class_transformer_1.Type)(() => Number),
    __metadata("design:type", Number)
], AttributeValueReq.prototype, "rank", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], AttributeValueReq.prototype, "metadata", void 0);
exports.AttributeValueReq = AttributeValueReq;
class AdminPostAttributeReq {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], AdminPostAttributeReq.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], AdminPostAttributeReq.prototype, "description", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => Boolean),
    __metadata("design:type", Boolean)
], AdminPostAttributeReq.prototype, "filterable", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(attribute_1.AttributeType),
    __metadata("design:type", String)
], AdminPostAttributeReq.prototype, "type", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => AttributeValueReq),
    (0, class_validator_1.ValidateNested)({ each: true }),
    (0, class_validator_1.IsArray)(),
    __metadata("design:type", Array)
], AdminPostAttributeReq.prototype, "values", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], AdminPostAttributeReq.prototype, "handle", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], AdminPostAttributeReq.prototype, "metadata", void 0);
__decorate([
    (0, class_validator_1.IsString)({ each: true }),
    __metadata("design:type", Array)
], AdminPostAttributeReq.prototype, "categories", void 0);
exports.AdminPostAttributeReq = AdminPostAttributeReq;
