import { AxiosInstance } from "axios";
import { LiqPayResponse, LiqPayStatusResponse } from "./interfaces/liqpay.interfaces";
export declare const LIQPAY_API_PATH = "https://www.liqpay.ua/api";
type HTTPMethod = "GET" | "POST" | "PUT" | "PATCH" | "DELETE" | "OPTIONS" | "HEAD";
interface Request {
    path: string;
    method: HTTPMethod;
    headers?: Record<string, string>;
    data?: URLSearchParams;
    query?: Record<string, string>;
}
export interface LiqPayWrapperOptions {
    disable_retries?: boolean;
}
export default class LiqPay {
    privateKey: string;
    publicKey: string;
    protected readonly axiosInstance: AxiosInstance;
    constructor(publicKey: string, privateKey: string, options?: LiqPayWrapperOptions);
    protected requestLiqPayAPI<T>(request: Request): Promise<T>;
    transaction: {
        get: ({ id }: {
            id: string;
        }) => Promise<LiqPayStatusResponse>;
    };
    refund: {
        create: ({ id, amount }: {
            id: string;
            amount: number;
        }) => Promise<LiqPayResponse>;
    };
    private constructSignature;
    private constructObject;
    sign(str: string): string;
    private constructData;
}
export {};
