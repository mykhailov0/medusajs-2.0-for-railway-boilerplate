"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.config = void 0;
exports.default = orderCapturer;
const liqpay_payment_processor_1 = __importDefault(require("../services/liqpay-payment-processor"));
function isOrderPlacedData(data) {
    return typeof data === "object" && data !== null && "id" in data;
}
exports.config = {
    event: "order.placed",
};
async function orderCapturer({ container, data, }) {
    var _a;
    const orderService = container.resolve("orderService");
    const pluginConfiguration = container.resolve(`pp_${liqpay_payment_processor_1.default.identifier}`).configuration;
    try {
        if (!isOrderPlacedData(data)) {
            return;
        }
        const order = await orderService.retrieve(data.id, {
            relations: ["payments"],
        });
        if (!order)
            return;
        // Check if the order was paid for with Paystack
        const isPaidForWithLiqPay = (_a = order.payments) === null || _a === void 0 ? void 0 : _a.some(p => p.provider_id === "liqpay");
        if (!isPaidForWithLiqPay)
            return;
        if (pluginConfiguration.debug) {
            console.info("LP_P_Debug: Capturing LiqPay order with data:", JSON.stringify(data, null, 2));
        }
        // Capture the payment
        await orderService.capturePayment(order.id);
    }
    catch (error) {
        console.error("Error capturing LiqPay order:", error);
    }
}
